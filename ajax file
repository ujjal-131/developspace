# developspace
	var SetupWizard = {
		init: function () {
			this.initUI();
			this.initPluginsUI();
			this.initDemoImportUI();
			this.initDemoRemove();

			this.dummy_index = 0;
			this.dummy_count = 0;
			this.dummy_process = 'import_start';

			this.subpages_index = 0;
			this.subpages_count = 0;
			this.subpages_process = 'import_start';
		},
		initUI: function () {
			// Load more plugins compatible with page
			$('.button-load-plugins').on('click', function (e) {
				e.preventDefault();
				$(this).hide()
					.closest('.page-plugins').children('.hidden')
					.hide().fadeIn().removeClass('hidden');
			});

			// Upload media button
			$('.button-upload').on('click', function (e) {
				e.preventDefault();
				renderMediaUploader();
			});
		},
		initPluginsUI: function () {
			function checkMultipleEditors() {
				var count = 0;

				count += $('.page-plugins [data-slug=elementor] input').is(':checked') ? 1 : 0;
				count += $('.page-plugins [data-slug=js_composer] input').is(':checked') ? 1 : 0;

				$('.use-multiple-editors').css('display',
					count >= 2 ? 'inline-block' : 'none'
				);
			}
			$('.page-plugins input').on('change', checkMultipleEditors);
		},
		initDemoImportUI: function () {
			// Demo Import
			var $install_demos = $('#page-install-demos');

			if ($install_demos.length) {

				// Select demo
				$(document.body).on('click', '.page-install-demos .page-wrapper', function (e) {
					e.preventDefault();
					$('#page-install-options').show();
					var $this = $(this),
						$demos = $this.closest('.page-install-demos'),
						$demo = $demos.find('.page-install-demo'),
						useEditor = $this.find('.plugins-used').data('editor');
					$demo.find('.page-screenshot').attr('src', $this.find('.page-screenshot').attr('src'));
					$demo.find('.page-link').attr('href', $this.find('.page-name').attr('data-live-url'));
					$demo.find('.page-install-demo-header h2').html('<span class="page-mini-logo"></span>' + wp.i18n.__('Demo Import - ') + $this.find('.page-name').text()).data('title', $this.find('.page-name').text());
					$demo.find('.page-install-editors>label').addClass('d-none');
					$demo.find('.plugins-used').remove();
					$('#page-install-demo-type').val($this.find('.page-name').attr('id'));
					$('#import-status .page-installing-options>div').removeClass('prepare installing installed');
					$('#import-status .import-result').html('');

					if ($this.find('.plugins-used').length) {
						$this.find('.plugins-used').clone().insertBefore($demos.find('.page-install-section'));
					}
					findActiveEditor();
					useEditor.forEach(function (editor) {
						$demo.find('#page-' + editor + '-demo').parent().removeClass('d-none');
					});
					$.magnificPopup.open({
						items: {
							src: '.page-install-demo'
						},
						type: 'inline',
						mainClass: 'mfp-with-zoom',
						zoom: {
							enabled: true,
							duration: 300
						}
					});
				});

				// Select editor
				var findActiveEditor = function () {
					$('.page-install-editors input').each(function () {
						$('#page-install-options .plugins-used [data-plugin=' + this.value + ']').css('display', this.checked ? '' : 'none');
					})
					if ($('.page-install-demo .plugins-used [data-plugin]').filter(function () { return this.style.display != 'none' && (this.querySelector(".demo-plugin.installed") == null ? true : false); }).length) {
						$('.page-install-demo .page-install-section').slideUp();
					} else {
						$('.page-install-demo .page-install-section').slideDown();
					}
				}
				$('.page-install-editors input').on('change', findActiveEditor);

				// Start importing.
				$('.page-import-yes').on('click', function () {
					if (!confirm(page_setup_wizard_params.texts.confirm_override)) {
						return;
					}

					SetupWizard.addAlertLeavePage();

					var demo = $('#page-install-demo-type').val(),
						demo_slug = demo,
						demo_builder = 'elementor';
					if ($('#page-js_composer-demo').is(':checked')) {
						demo_slug = 'wpb-' + demo;
						demo_builder = 'wpb';
					}
					var options = {
						demo: demo,
						demo_slug: demo_slug,
						builder: demo_builder,
						import_options: $('#page-import-options').is(':checked'),
						reset_menus: $('#page-reset-menus').is(':checked'),
						reset_widgets: $('#page-reset-widgets').is(':checked'),
						import_dummy: $('#page-import-dummy').is(':checked'),
						import_widgets: $('#page-import-widgets').is(':checked'),
						import_subpages: $('#page-import-subpages').is(':checked'),
						override_contents: $('#page-override-contents').is(':checked'),
						dummy_action: $(this).hasClass('alternative') ? 'page_import_dummy_step_by_step' : 'page_import_dummy'
					};

					if (options.demo) {
						$('#import-status .import-result').html('');
						var data = { 'action': 'page_download_demo_file', 'demo': demo_slug, 'wpnonce': page_setup_wizard_params.wpnonce };
						$.post(ajaxurl, data, function (response) {
							try {
								response = $.parseJSON(response);
							} catch (e) { }
							if (response && response.process && response.process == 'success') {
								SetupWizard.page_import_options(options);
							} else if (response && response.process && response.process == 'error') {
								SetupWizard.page_import_failed(options, response.message);
							} else {
								SetupWizard.page_import_failed(options);
							}
						}).fail(function (response) {
							SetupWizard.page_import_failed(options);
						});
						options.import_options && $('.page-installing-options .page-import-options').addClass('prepare');
						options.import_dummy && $('.page-installing-options .page-import-dummy').addClass('prepare');
						options.reset_menus && $('.page-installing-options .page-reset-menus').addClass('prepare');
						options.reset_widgets && $('.page-installing-options .page-reset-widgets').addClass('prepare');
						options.import_widgets && $('.page-installing-options .page-import-widgets').addClass('prepare');
						options.import_subpages && $('.page-installing-options .page-import-subpages').addClass('prepare');
						$('.page-install-demo .page-install-demo-header h2').html('<span class="page-mini-logo"></span>' + page_setup_wizard_params.texts.installing + ' ' + $('#' + demo).html()).addClass('text-left');
						$('#page-install-options').hide();
					}
				});
			}
		},
		alertLeavePage: function (e) {
			return e.returnValue = page_setup_wizard_params.texts.leave_confirm;
		},
		addAlertLeavePage: function () {
			$('.page-import-yes.btn-primary').attr('disabled', 'disabled');
			$('.mfp-bg, .mfp-wrap').off('click');
			$(window).on('beforeunload', this.alertLeavePage);
		},
		removeAlertLeavePage: function () {
			$('.page-import-yes.btn-primary').prop('disabled', false);
			$('.mfp-bg, .mfp-wrap, .mfp-close').on('click', function (e) {
				if ($(e.target).is('.mfp-wrap .mfp-content *:not(.mfp-close)')) {
					return;
				}
				e.preventDefault();
				$.magnificPopup.close();
			});
			$(window).off('beforeunload', this.alertLeavePage);
		},
		showImportMessage: function (selected_demo, message) {
			if (message) {
				message.startsWith('success') && (message = message.slice(7));
				message.startsWith('error') && (message = message.slice(5));
				message && $('#import-status .import-result').html(message);
			}
		},
		// import options
		page_import_options: function (options) {
			if (!options.demo) {
				SetupWizard.removeAlertLeavePage();
				return;
			}
			if (options.import_options) {
				var data = { 'action': 'page_import_options', 'demo': options.demo_slug, 'wpnonce': page_setup_wizard_params.wpnonce };
				$('.page-installing-options .page-import-options').addClass('installing');

				$.post(ajaxurl, data, function (response) {
					// response && SetupWizard.showImportMessage(options.demo, response);
					$('.page-installing-options .page-import-options').removeClass('installing').addClass('installed');
					SetupWizard.page_reset_menus(options);
				}).fail(function (response) {
					$('.page-installing-options .page-import-options').removeClass('installing');
					SetupWizard.page_reset_menus(options);
				});
			} else {
				SetupWizard.page_reset_menus(options);
			}
		},
		// reset_menus
		page_reset_menus: function (options) {
			if (!options.demo) {
				SetupWizard.removeAlertLeavePage();
				return;
			}
			if (options.reset_menus) {
				var data = { 'action': 'page_reset_menus', 'import_shortcodes': options.import_shortcodes, 'wpnonce': page_setup_wizard_params.wpnonce };
				$('.page-installing-options .page-reset-menus').addClass('installing');

				$.post(ajaxurl, data, function (response) {
					// if (response) SetupWizard.showImportMessage(options.demo, response);
					$('.page-installing-options .page-reset-menus').removeClass('installing').addClass('installed');
					SetupWizard.page_reset_widgets(options);
				}).fail(function (response) {
					$('.page-installing-options .page-reset-menus').removeClass('installing');
					SetupWizard.page_reset_widgets(options);
				});
			} else {
				SetupWizard.page_reset_widgets(options);
			}
		},
		// reset widgets
		page_reset_widgets: function (options) {
			if (!options.demo) {
				SetupWizard.removeAlertLeavePage();
				return;
			}
			if (options.reset_widgets) {
				var data = { 'action': 'page_reset_widgets', 'wpnonce': page_setup_wizard_params.wpnonce };
				$('.page-installing-options .page-reset-widgets').addClass('installing');

				$.post(ajaxurl, data, function (response) {
					// if (response) SetupWizard.showImportMessage(options.demo, response);
					$('.page-installing-options .page-reset-widgets').removeClass('installing').addClass('installed');
					SetupWizard.page_import_dummy(options);
				}).fail(function (response) {
					$('.page-installing-options .page-reset-widgets').removeClass('installing');
					SetupWizard.page_import_dummy(options);
				});
			} else {
				SetupWizard.page_import_dummy(options);
			}
		},
		// import dummy content
		page_import_dummy: function (options) {
			if (!options.demo) {
				SetupWizard.removeAlertLeavePage();
				return;
			}
			if (options.import_dummy) {
				var data = { 'action': options.dummy_action, 'process': 'import_start', 'demo': options.demo_slug, 'override_contents': options.override_contents, 'wpnonce': page_setup_wizard_params.wpnonce };
				this.dummy_index = 0;
				this.dummy_count = 0;
				this.dummy_process = 'import_start';
				SetupWizard.page_import_dummy_process(options, data);
				// SetupWizard.showImportMessage(options.demo, 'Importing posts');
				$('.page-installing-options .page-import-dummy').addClass('installing');
			} else {
				SetupWizard.page_import_widgets(options);
			}
		},
		// import dummy content process
		page_import_dummy_process: function (options, args) {
			$.post(ajaxurl, args, function (response) {
				if (response && /^[\],:{}\s]*$/.test(response.replace(/\\["\\\/bfnrtu]/g, '@').
					replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
					replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {
					response = $.parseJSON(response);
					if (response.process != 'complete') {
						var requests = { 'action': args.action, 'wpnonce': page_setup_wizard_params.wpnonce };
						if (response.process) requests.process = response.process;
						if (response.index) requests.index = response.index;

						requests.demo = options.demo_slug;
						requests.override_contents = options.override_contents;
						SetupWizard.page_import_dummy_process(options, requests);

						this.dummy_index = response.index;
						this.dummy_count = response.count;
						this.dummy_process = response.process;

						if (this.dummy_count && this.dummy_index) {
							$('#import-status .page-import-dummy > span:last-child').html(
								'(' + Math.min(this.dummy_index / this.dummy_count * 100, 100).toFixed(0) + '%)');
						}
					} else if (response.process == 'error') {
						SetupWizard.page_import_failed(options);
					} else {
						// SetupWizard.showImportMessage(options.demo, response.message);
						SetupWizard.page_import_widgets(options);
						$('.page-installing-options .page-import-dummy').removeClass('installing').addClass('installed');
					}
				} else {
					$('.page-installing-options .page-import-dummy').removeClass('installing');
					SetupWizard.page_import_failed(options);
				}
			}).fail(function (response) {
				if (args.action == 'page_import_dummy') {
					SetupWizard.page_import_failed(options);
				} else {
					var requests;
					if (this.dummy_index < this.dummy_count) {
						requests = { 'action': args.action, 'wpnonce': page_setup_wizard_params.wpnonce };
						requests.process = this.dummy_process;
						requests.index = ++this.dummy_index;
						requests.demo = options.demo;

						SetupWizard.page_import_dummy_process(options, requests);
					} else {
						requests = { 'action': args.action, 'wpnonce': page_setup_wizard_params.wpnonce };
						requests.process = this.dummy_process;
						requests.demo = options.demo;

						SetupWizard.page_import_dummy_process(options, requests);
					}
				}
			});
		},
		// import widgets
		page_import_widgets: function (options) {
			if (!options.demo) {
				SetupWizard.removeAlertLeavePage();
				return;
			}
			if (options.import_widgets) {
				var data = { 'action': 'page_import_widgets', 'demo': options.demo_slug, 'wpnonce': page_setup_wizard_params.wpnonce };

				// SetupWizard.showImportMessage(options.demo);
				$('.page-installing-options .page-import-widgets').addClass('installing');

				$.post(ajaxurl, data, function (response) {
					if (response) {
						$('.page-installing-options .page-import-widgets').removeClass('installing').addClass('installed');
						SetupWizard.page_import_subpages(options);
					}
				});
			} else {
				SetupWizard.page_import_subpages(options);
			}
		},
		// import subpages
		page_import_subpages: function (options) {
			if (!options.demo) {
				SetupWizard.removeAlertLeavePage();
				return;
			}
			if (options.import_subpages) {
				var data = { 'action': 'page_import_subpages', 'process': 'import_start', 'demo': 'subpages', 'override_contents': true, 'wpnonce': page_setup_wizard_params.wpnonce, 'builder': options.builder };

				this.subpages_index = 0;
				this.subpages_count = 0;
				this.subpages_process = 'import_start';
				SetupWizard.page_import_subpages_process(options, data);
				// SetupWizard.showImportMessage(options.demo, 'Importing posts');
				$('.page-installing-options .page-import-subpages').addClass('installing');
			} else {
				SetupWizard.page_import_finished(options);
			}
		},
		// import subpages content process
		page_import_subpages_process: function (options, args) {
			$.post(ajaxurl, args, function (response) {
				if (response && /^[\],:{}\s]*$/.test(response.replace(/\\["\\\/bfnrtu]/g, '@').
					replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').
					replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {
					response = $.parseJSON(response);
					if (response.process != 'complete') {
						var requests = { 'action': args.action, 'wpnonce': page_setup_wizard_params.wpnonce, 'builder': options.builder };
						if (response.process) requests.process = response.process;
						if (response.index) requests.index = response.index;

						requests.demo = options.demo_slug;
						requests.override_contents = options.override_contents;
						SetupWizard.page_import_subpages_process(options, requests);

						this.subpages_index = response.index;
						this.subpages_count = response.count;
						this.subpages_process = response.process;

						if (this.subpages_count && this.subpages_index) {
							$('#import-status .page-import-subpages > span:last-child').html(
								'(' + Math.min(this.subpages_index / this.subpages_count * 100, 100).toFixed(0) + '%)');
						}
					} else {
						// SetupWizard.showImportMessage(options.demo, response.message);
						$('.page-installing-options .page-import-subpages').removeClass('installing').addClass('installed');
						$.post(ajaxurl, { 'action': 'page_update_menu_links', 'wpnonce': page_setup_wizard_params.wpnonce }, function (response) {
							SetupWizard.page_import_finished(options);
						});
					}
				} else {
					$('.page-installing-options .page-import-subpages').removeClass('installing').addClass('installed');
					$.post(ajaxurl, { 'action': 'page_update_menu_links', 'wpnonce': page_setup_wizard_params.wpnonce }, function (response) {
						SetupWizard.page_import_finished(options);
					});
				}
			}).fail(function (response) {
				if (args.action == 'page_import_subpages') {
					SetupWizard.page_import_failed(options);
				} else {
					var requests;
					if (this.subpages_index < this.subpages_count) {
						requests = { 'action': args.action, 'wpnonce': page_setup_wizard_params.wpnonce };
						requests.process = this.subpages_process;
						requests.index = ++this.subpages_index;
						requests.demo = options.demo;

						SetupWizard.page_import_subpages_process(options, requests);
					} else {
						requests = { 'action': args.action, 'wpnonce': page_setup_wizard_params.wpnonce };
						requests.process = this.subpages_process;
						requests.demo = options.demo;

						SetupWizard.page_import_subpages_process(options, requests);
					}
				}
			});
		},
		page_delete_tmp_dir: function (demo_slug) {
			var data = { 'action': 'page_delete_tmp_dir', 'demo': demo_slug, 'wpnonce': page_setup_wizard_params.wpnonce };
			$.post(ajaxurl, data, function (response) { });
		},
		// import failed
		page_import_failed: function (options, message) {
			SetupWizard.page_delete_tmp_dir(options.demo_slug);
			message && SetupWizard.showImportMessage(options.demo, message);
			SetupWizard.removeAlertLeavePage();
			$('.page-install-demo .page-install-demo-header h2').html('<span class="page-mini-logo"></span>' + wp.i18n.__('Demo Import') + ' - ' + $(".page-install-demos .page-install-demo-header h2").data('title') + page_setup_wizard_params.texts.install_failed);
			$('#page-install-options').show();
			$('#import-status .page-installing-options>div').removeClass('prepare installing installed');
		},
		// import finished
		page_import_finished: function (options) {
			if (!options.demo) {
				removeAlertLeavePage();
				return;
			}
			SetupWizard.page_delete_tmp_dir(options.demo_slug);
			setTimeout(function () {
				if ($('#wp-admin-bar-view-site').length) {
					SetupWizard.showImportMessage(options.demo, '<a href="' + $('#wp-admin-bar-view-site a').attr('href') + '" target="_blank">' + page_setup_wizard_params.texts.visit_your_site + '</a>');
				} else if ($('#current_site_link').length) {
					SetupWizard.showImportMessage(options.demo, '<a href="' + $('#current_site_link').val() + '" target="_blank">' + page_setup_wizard_params.texts.visit_your_site + '</a>');
				} else {
					$('.page-installing-options>div')
				}
				$('.page-install-demo .page-demo-install').html($('#' + options.demo).html() + page_setup_wizard_params.texts.install_finished);
				SetupWizard.removeAlertLeavePage();
				$('.page-remove-demo-title.mfp-hide').removeClass('mfp-hide').hide().slideDown();
				$('.page-remove-demo .button').prop('disabled', false);
			}, 300);
		},

		// demo remove
		initDemoRemove: function () {
			$('.btn-remove-demo-contents').on('click', function (e) {
				$('.page-remove-demo .remove-status').html('');
				$.magnificPopup.open({
					items: {
						src: '.page-remove-demo'
					},
					type: 'inline',
					mainClass: 'mfp-with-zoom',
					zoom: {
						enabled: true,
						duration: 300
					}
				});
			});
			$('.page-remove-demo label:first-child input').on('change', function (e) {
				if ($(this).is(':checked')) {
					$(this).closest('.page-remove-demo').find('input[type="checkbox"]').prop('checked', true);
				} else {
					$(this).closest('.page-remove-demo').find('input[type="checkbox"]').prop('checked', false);
				}
			});
			var page_fn_remove_demo = function (options, all_checked) {
				var option = options.shift();
				if (option !== undefined) {
					$('.page-remove-demo .button').prop('disabled', true);
					var text = 'Other Contents';
					if ($('.page-remove-demo input[value="' + option + '"]').length) {
						text = $('.page-remove-demo input[value="' + option + '"]').parent().text();
					}
					var html = '<h5 class="page-installing-options"><span class="installing"><span class="page-loading"></span>' + wp.i18n.__('Removing') + ' ' + text + '</span></h5>';
					$('.page-remove-demo .remove-status').html(html);

					var postdata = { action: 'page_sw_remove_demo', wpnonce: page_setup_wizard_params.wpnonce };
					if (-1 === option.indexOf('widgets') && -1 === option.indexOf('options')) {
						postdata.type = 'posts';
						postdata.post_type = option;
					} else {
						postdata.type = option;
					}
					$.ajax({
						url: ajaxurl,
						type: 'POST',
						dataType: 'JSON',
						data: postdata,
						success: function (res) {
							if (res && res.success) {
								page_fn_remove_demo(options, all_checked);
							}
						},
						failure: function () {
							$('.page-remove-demo .button').prop('disabled', false);
							$('.page-remove-demo .remove-status').html('<h5>' + wp.i18n.__('Removed failed. Please refresh and try again.') + '</h5>');
						}
					});
				} else {
					$('.page-remove-demo .remove-status').html('<h5 class="success">' + wp.i18n.__('Removed successfully.') + '</h5>');
					$('.page-remove-demo .button').prop('disabled', false);
				}
			};
			$('.page-remove-demo .button').on('click', function (e) {
				e.preventDefault();
				var options = [], all_checked = false;
				$(this).closest('.page-remove-demo').find('input[type="checkbox"]:checked').each(function () {
					var val = $(this).val();
					if (val) {
						options.push($(this).val());
					} else {
						all_checked = true;
					}
				});
				if (all_checked) {
					options.push('other');
				}
				if (options.length) {
					page_fn_remove_demo(options, all_checked);
				}
			});
		}
	}
